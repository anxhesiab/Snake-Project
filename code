import turtle
import time
from random import random
delay= 0.1


# Set up the screen
snake= turtle.Screen()
snake.title("Snake Game")
snake.bgcolor("Green")
snake.setup(width=650, height=650)

# Creating the snake head
snake_head=turtle.Turtle()
snake_head.speed(0)
snake_head.shape("square")
snake_head.coloer("blue")
snake_head.penup()
snake_head.goto(0,0)
snake_head.direction="stop"

#Creating the apple of for the snake
apple=turtle.Turtle()
apple.speed(0)
apple.shape("circle")
apple.color("red")
apple.penup()
apple.goto(0,100)
segments=[]

# tabel of scores
score = 0
highest_score = 0
text = turtle.Turtle()
text.speed(0)

text.shape("square")
text.color("white")
text.penup()
text.hideturtle()
text.goto(0, 260)
text.write("Score: 0 High Score: {}".format(highest_score), align="center", font=("Courier", 24, "normal"))
# Functions
def moving():
    if snake_head.direction == "up":
        y = snake_head.ycor() #y coordinate of the turtle
        snake_head.sety(y + 20)
 
    if snake_head.direction == "down":
        y = snake_head.ycor() #y coordinate of the turtle
        snake_head.sety(y - 20)
 
    if snake_head.direction == "right":
        x = snake_head.xcor() #y coordinate of the turtle
        snake_head.setx(x + 20)
 
    if snake_head.direction == "left":
        x = snake_head.xcor() #y coordinate of the turtle
        snake_head.setx(x - 20)


# Keyboard Bindings
def up():
    if snake_head.direction != "down":
        snake_head.direction = "up"
 
def down():
    if snake_head.direction != "up":
        snake_head.direction = "down"
 
def right():
    if snake_head.direction != "left":
        snake_head.direction = "right"
 
def left():
    if snake_head.direction != "right":
        snake_head.direction = "left"
snake.listen()
snake.onkey(up, "w")
snake.onkey(down, "s")
snake.onkey(right, "d")
snake.onkey(left, "a")

# Increasing the score
  score = score+10
  if score > highest_score:
    highest_score = score
  segments = []
  
 # Reset score
 score = 0
  
 # Update score
 text.clear()
 text.write("score: {} High Score: {}".format(score, highest_score), align="center", font=("Courier", 24, "normal"))

# moving the apple to a random position on screen
if snake_head.distance(apple) <15:
  x = random(-290, 290)
  y = random(-290, 290)
  apple.goto(x, y)

  
  # Increase the score
  score = score+10
  if score > highest_score:
    highest_score = score
  segments = []

# add a segment
  segment = turtle.Turtle()
  segment.speed(0)
  segment.shape("square")
  segment.color("grey")
  segment.penup()
  segments.append(segment)
